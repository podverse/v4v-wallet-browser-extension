$themes: (
  'podnews-dark': (
    'buttonDisabledBackgroundColor': #808080,
    'buttonDisabledBorderColor': #808080,
    'buttonDisabledTextColor': #AAAAAA,

    'buttonPrimaryBackgroundColor': #F13232,
    'buttonPrimaryBorderColor': #F13232,
    'buttonPrimaryTextColor': #E2DED6,
    'buttonPrimaryHoverBackgroundColor': #F13232,
    'buttonPrimaryHoverBorderColor': #F13232,
    'buttonPrimaryHoverTextColor': #E2DED6,

    'buttonSecondaryBackgroundColor': #F13232,
    'buttonSecondaryBorderColor': #F13232,
    'buttonSecondaryTextColor': #E2DED6,
    'buttonSecondaryHoverBackgroundColor': #F13232,
    'buttonSecondaryHoverBorderColor': #F13232,
    'buttonSecondaryHoverTextColor': #E2DED6,

    'buttonDangerBackgroundColor': #BD2130,
    'buttonDangerBorderColor': #BD2130,
    'buttonDangerTextColor': #E2DED6,
    'buttonDangerHoverBackgroundColor': #C43745,
    'buttonDangerHoverBorderColor': #C43745,
    'buttonDangerHoverTextColor': #E2DED6,

    'divider': #333333,

    'headerBarBorderColor': #333333,
    'headerBarMoreButtonColor': #E2DED6,
    'headerBarMoreButtonHoverColor': #AAAAAA,

    'linkTextColor': #74A8DC,
    'linkTextColorHover': #49A4FF,

    'loadingSpinnerIndicatorColor': #E2DED6,
    'loadingSpinnerTransparentColor': rgba(255, 255, 255, 0.2),

    'menuItemTextColor': #E2DED6,
    'menuItemHoverTextColor': #AAAAAA,

    'popupBackgroundColor': #121212,
    'popupBorderColor': #333333,

    'textColor': #E2DED6,
    'textSecondaryColor': #AAAAAA,

    'textInputBackgroundColor': #121212,
    'textInputBorderColor': #333333,
    'textInputEyebrowColor': #F13232,
    'textInputFocusBorderColor': #F13232,
    'textInputPlaceholderColor': #AAAAAA,
    'textInputTextColor': #E2DED6
  ),
  'podnews-light': (

  ),
  'podverse-dark': (
    'buttonDisabledBackgroundColor': #808080,
    'buttonDisabledBorderColor': #808080,
    'buttonDisabledTextColor': #CCCCCC,

    'buttonPrimaryBackgroundColor': #3D9DFE,
    'buttonPrimaryBorderColor': #3D9DFE,
    'buttonPrimaryTextColor': #000000,
    'buttonPrimaryHoverBackgroundColor': #49A4FF,
    'buttonPrimaryHoverBorderColor': #49A4FF,
    'buttonPrimaryHoverTextColor': #000000,

    'buttonSecondaryBackgroundColor': #252a6499,
    'buttonSecondaryBorderColor': #252a6499,
    'buttonSecondaryTextColor': #FFFFFF,
    'buttonSecondaryHoverBackgroundColor': #34397b,
    'buttonSecondaryHoverBorderColor': #34397b,
    'buttonSecondaryHoverTextColor': #FFFFFF,

    'buttonDangerBackgroundColor': #BD2130,
    'buttonDangerBorderColor': #BD2130,
    'buttonDangerTextColor': #FFFFFF,
    'buttonDangerHoverBackgroundColor': #C43745,
    'buttonDangerHoverBorderColor': #C43745,
    'buttonDangerHoverTextColor': #FFFFFF,

    'divider': #777777,

    'headerBarBorderColor': #777777,
    'headerBarMoreButtonColor': #FFFFFF,
    'headerBarMoreButtonHoverColor': #CCCCCC,

    'linkTextColor': #74A8DC,
    'linkTextColorHover': #49A4FF,

    'loadingSpinnerIndicatorColor': #FFFFFF,
    'loadingSpinnerTransparentColor': rgba(255, 255, 255, 0.2),

    'menuItemTextColor': #FFFFFF,
    'menuItemHoverTextColor': #CCCCCC,

    'popupBackgroundColor': #030626,
    'popupBorderColor': #333333,

    'textColor': #FFFFFF,
    'textSecondaryColor': #CCCCCC,

    'textInputBackgroundColor': #0F1235,
    'textInputBorderColor': #252a6499,
    'textInputEyebrowColor': #74A8DC,
    'textInputFocusBorderColor': #007fff,
    'textInputPlaceholderColor': #CCCCCC,
    'textInputTextColor': #FFFFFF
  ),
  'podverse-light': (

  )
);

/**
* Code created by Joshua Tzucker
* https://joshuatz.com/posts/2019/coding-a-css-theme-switcher-a-multitude-of-web-dev-options/#method-b
* 
* Mixin to use to generate blocks for each theme
* Automatically takes @content
*/
$scopedTheme: null;
@mixin themeGen($allThemesMap: $themes) {
    @each $themeName, $themeMap in $allThemesMap {
        .theme-#{$themeName} & {
            // Creating a map that contains values specific to theme.
            // Global is necessary since in mixin
            $scopedTheme: () !global;
            @each $variableName, $variableValue in $themeMap {
                // Merge each key-value pair into the theme specific map
                $scopedTheme: map-merge($scopedTheme, ($variableName: $variableValue)) !global;
            }
            // The original content passed
            @content;
            // Unset
            $scopedTheme: null !global;
        }
    }
}
/**
* Function to call within themeGen mixin, to get value from the current theme in the iterator
*/
@function getThemeVal($themeVar){
    @return map-get($scopedTheme,$themeVar);
}
